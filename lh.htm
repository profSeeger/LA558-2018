<!DOCTYPE html>
<meta name="robots" content="noindex">
<html>
<head>
<meta name="description" content="Assignment 19 - Geolocating LTH">
	
	<title>Layers Control Tutorial - Leaflet</title>

	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
	
	<script> src="https://leaflet-extras.github.io/leaflet-providers/preview/#filter=Esri"type="text/javascript"</script>
	
	<script src="https://code.jquery.com/jquery-3.1.0.js"></script>
	
	<style id="jsbin-css">
html, body, 
#map { 
			position:relative;
   width: 500px;
	  height: 400px;
			margin: 40px; 
			padding: 0px;
   margin-right: auto;
	  margin-left: auto;
	  
	
	}
#header, #footer {
	clear: both;
	padding: 15px;
	background-color: tan;
	color: darkRed;
	text-align: center;
}
#container {
	background-color: olive;
 text-align: center;
	width: 800px;
	height: 850px;
	margin-right: auto;
	margin-left: auto;
 border-style: solid;
 border-width: 30px;
}
</style>
</head>
<body>

	<div id="container">
     <div id = "header">
        <h2>Lucas Haffner LA 458 </h2>
        <h3> Assignment 19: Geolocating</h3>
     </div><br>
		

<div id="map"></div>
  <div id = "footer">
   <i> Lucas T. Haffner, College of Design, ISU
    </i></div>
	
		<button onclick="getLocation()">Get location</button>
	
	<div id = "myLocation">my location is not set</div>
		
</div>
<script id="jsbin-javascript">
console.clear();
//JSON LTH 
var cities = [{
    "name" : "Colorado Springs",
    "lat" : "38.835036 ",
    "long" : "-104.8254",
    "iconColor" : "0000ff",
    "popupText" : "This city has the <br> Garden of the Gods <br>located in the Colorado <br>frontrange"
},
{
    "name" : "Durango",
    "lat" : "37.270402",
    "long" : "-108.566667",
    "iconColor" : "ff0000",   "popupText" : "A city in the heart <br> of the Rockies"
},
{
    "name" : "Grand Junction",
    "lat" : "39.066667",
    "long" : "-107.882476",
    "iconColor" : "00ffb2",
    "popupText" : "A city we will hopefully <br> be moving to <br> West of the Great Divide"
}];
//GeoJSON LTH
var myGeoJSON = {"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-105.7098,40.743375]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-107.654012,39.7198647]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-104.200176,39.773607]}},{"type":"Feature","properties":{},"geometry":{"type":"LineString","coordinates":[[-105.71044921875,
              40.74725696280421],[-106.3916015625,
              39.757879992021756],[-107.666015625,
              39.7747694852954655],[-106.8310546875,
              39.027718840211605],[-107.33642578124999,
              38.35888785866677],[-106.171875,
              38.736946065676],[-105.27099609375,
              37.94419750075404],[-105.4248046875,
              39.01064750994083],[-104.21630859375,
              39.791654835253425],[-105.46875,
              39.791654835253425],[-105.71044921875,
              40.74725696280421]]}},
																																																							{
      "type": "Feature",
      "properties": {
        "marker-color": "#07f555",
        "marker-size": "large",
        "marker-symbol": "triangle-stroked"
      },
      "geometry": {
        "type": "Point",
        "coordinates": [
          -112.0166015625,
          40.74725696280421
        ]
      }
    }
  ]
};
				
//Base Layers LTH
var OSM = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors',
    maxZoom: 18
});
//create the map LTH
var map = L.map('map', {
  center: new L.LatLng(42.0908, -93.6208),
  zoom: 4,
  layers: [OSM]
});
var iconMarkerURL = "https://www.googlemapsmarkers.com/v1/";
 for (var i = 0; i < cities.length; i++) {
    console.log(cities[i].name);
  
  var marker = L.marker([cities[i].lat, cities[i].long], {    
    icon: L.icon({
      iconUrl: iconMarkerURL + cities[i].iconColor,
      iconSize:[9, 17],
      iconAnchor:[5, 17],
      popupAnchor:[0, -20]
    }),
    title: cities[i].name
  }).bindPopup("<b>"+cities[i].name+"</b><br>"+cities[i].popupText+".").addTo(map);
}
var myStyle = {
    "color": "#ff0000",
    "weight": 3,
    "opacity": 0.8,
};
L.geoJSON(myGeoJSON, {
    style: myStyle,
}).addTo(map);
//Begining of Assn 11 mapping
var forests = L.layerGroup();
	L.marker([40.547200, -106.721191]).bindPopup('Medicine Bow-Routt National Forests').addTo(forests),
	L.marker([39.432678, -106.859013]).bindPopup('White River National Forest').addTo(forests),
	L.marker([38.272689, -108.094482]).bindPopup('Uncompahgre National Forest').addTo(forests),
	L.marker([38.634036, -106.578369]).bindPopup('Gunnison National Forest').addTo(forests);
 L.marker([37.796763, -106.918945]).bindPopup('Rio Grande National Forest').addTo(forests);
 L.marker([39.884450, -106.018066]).bindPopup('Arapaho and Roosevelt National Forests').addTo(forests);
var polygon = L.polygon([
				[40.914902, -108.991651],
				[40.948102, -102.048292],
				[36.986472, -102.136183],
				[37.091706, -109.035597]
],{
			
				color: 'lightblue',
				fillColor: 'lightblue',
				fillOpacity: 0.5,
	
});
	var mbAttr = 'Map data &copy; <a href="https://openstreetmap.org">OpenStreetMap</a> contributors, ' +
			'<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
			'Imagery Â© <a href="https://mapbox.com">Mapbox</a>',
		mbUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';
	var grayscale   = L.tileLayer(mbUrl, {id: 'mapbox.light', attribution: mbAttr}),
		streets  = L.tileLayer(mbUrl, {id: 'mapbox.streets',   attribution: mbAttr});
var OpenTopoMap = L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {
	maxZoom: 17,
	attribution: 'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)'
});
var Esri_NatGeoWorldMap = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}', {
	attribution: 'Tiles &copy; Esri &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC',
	maxZoom: 16
});
var Esri_WorldTerrain = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}', {
	attribution: 'Tiles &copy; Esri &mdash; Source: USGS, Esri, TANA, DeLorme, and NPS',
	maxZoom: 13
});
var someStuff = L.layerGroup([cities, myGeoJSON])
//Get Geolocating area
function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
    } else {
        $("#myLocation").html("Geolocation is not supported by this browser.");
    }
}
function showPosition(position) {
	 $("#myLocation").html("Latitude: " + position.coords.latitude + 
    "<br>Longitude: " + position.coords.longitude);
}
function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
    } else {
        $("#myLocation").html("Geolocation is not supported by this browser.");
    }
}
function showPosition(position) {
	 $("#myLocation").html("Latitude: " + position.coords.latitude + 
    "<br>Longitude: " + position.coords.longitude);
}
	var baseLayers = {
		"Grayscale": grayscale,
		"Streets": streets,
		"Topo Map":OpenTopoMap,
		"NatGeo Map":Esri_NatGeoWorldMap,
		"Terrain":Esri_WorldTerrain,
	};
	var overlays = {
		"Forests": forests,
		"Polygon": polygon,
		"Grand Junction": marker,
	
			};
	L.control.layers(baseLayers, overlays).addTo(map);
var myStyle = {
    "color": "#ff7800",
    "weight": 5,
    "opacity": 0.65,
};
</script>
</body>
</html>
